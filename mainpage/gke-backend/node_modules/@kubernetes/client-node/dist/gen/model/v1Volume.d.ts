/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1AWSElasticBlockStoreVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1AWSElasticBlockStoreVolumeSource';
import { V1AzureDiskVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1AzureDiskVolumeSource';
import { V1AzureFileVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1AzureFileVolumeSource';
import { V1CSIVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1CSIVolumeSource';
import { V1CephFSVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1CephFSVolumeSource';
import { V1CinderVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1CinderVolumeSource';
import { V1ConfigMapVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1ConfigMapVolumeSource';
import { V1DownwardAPIVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1DownwardAPIVolumeSource';
import { V1EmptyDirVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1EmptyDirVolumeSource';
import { V1EphemeralVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1EphemeralVolumeSource';
import { V1FCVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1FCVolumeSource';
import { V1FlexVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1FlexVolumeSource';
import { V1FlockerVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1FlockerVolumeSource';
import { V1GCEPersistentDiskVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1GCEPersistentDiskVolumeSource';
import { V1GitRepoVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1GitRepoVolumeSource';
import { V1GlusterfsVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1GlusterfsVolumeSource';
import { V1HostPathVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1HostPathVolumeSource';
import { V1ISCSIVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1ISCSIVolumeSource';
import { V1NFSVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1NFSVolumeSource';
import { V1PersistentVolumeClaimVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1PersistentVolumeClaimVolumeSource';
import { V1PhotonPersistentDiskVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1PhotonPersistentDiskVolumeSource';
import { V1PortworxVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1PortworxVolumeSource';
import { V1ProjectedVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1ProjectedVolumeSource';
import { V1QuobyteVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1QuobyteVolumeSource';
import { V1RBDVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1RBDVolumeSource';
import { V1ScaleIOVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1ScaleIOVolumeSource';
import { V1SecretVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1SecretVolumeSource';
import { V1StorageOSVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1StorageOSVolumeSource';
import { V1VsphereVirtualDiskVolumeSource } from '@kubernetes/client-node/dist/gen/model/v1VsphereVirtualDiskVolumeSource';
/**
* Volume represents a named volume in a pod that may be accessed by any container in the pod.
*/
export declare class V1Volume {
    'awsElasticBlockStore'?: V1AWSElasticBlockStoreVolumeSource;
    'azureDisk'?: V1AzureDiskVolumeSource;
    'azureFile'?: V1AzureFileVolumeSource;
    'cephfs'?: V1CephFSVolumeSource;
    'cinder'?: V1CinderVolumeSource;
    'configMap'?: V1ConfigMapVolumeSource;
    'csi'?: V1CSIVolumeSource;
    'downwardAPI'?: V1DownwardAPIVolumeSource;
    'emptyDir'?: V1EmptyDirVolumeSource;
    'ephemeral'?: V1EphemeralVolumeSource;
    'fc'?: V1FCVolumeSource;
    'flexVolume'?: V1FlexVolumeSource;
    'flocker'?: V1FlockerVolumeSource;
    'gcePersistentDisk'?: V1GCEPersistentDiskVolumeSource;
    'gitRepo'?: V1GitRepoVolumeSource;
    'glusterfs'?: V1GlusterfsVolumeSource;
    'hostPath'?: V1HostPathVolumeSource;
    'iscsi'?: V1ISCSIVolumeSource;
    /**
    * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    */
    'name': string;
    'nfs'?: V1NFSVolumeSource;
    'persistentVolumeClaim'?: V1PersistentVolumeClaimVolumeSource;
    'photonPersistentDisk'?: V1PhotonPersistentDiskVolumeSource;
    'portworxVolume'?: V1PortworxVolumeSource;
    'projected'?: V1ProjectedVolumeSource;
    'quobyte'?: V1QuobyteVolumeSource;
    'rbd'?: V1RBDVolumeSource;
    'scaleIO'?: V1ScaleIOVolumeSource;
    'secret'?: V1SecretVolumeSource;
    'storageos'?: V1StorageOSVolumeSource;
    'vsphereVolume'?: V1VsphereVirtualDiskVolumeSource;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
